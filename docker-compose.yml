version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3001:3000"
    volumes:
      - ./frontend:/app
      - /app/.next
      - /app/node_modules
    depends_on:
      - backend
    environment:
      TZ: Asia/Tokyo
      NEXT_PUBLIC_API_BASE_URL: http://backend:8080

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - ./backend/uploads:/app/uploads
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: "postgres://user:password@db:5432/hotaruika_db?sslmode=disable"
      TZ: Asia/Tokyo
    env_file:
      - ./backend/.env

  db:
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: hotaruika_db
      TZ: Asia/Tokyo
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/sql:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d hotaruika_db"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
